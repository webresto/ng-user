{"version":3,"file":"webresto-ng-user.js","sources":["../../projects/webresto/ng-user/src/lib/services/ng-resto-user.service.ts","../../projects/webresto/ng-user/src/lib/directives/sign-up.directive.ts","../../projects/webresto/ng-user/src/lib/directives/sign-in.directive.ts","../../projects/webresto/ng-user/src/lib/directives/sign-out.directive.ts","../../projects/webresto/ng-user/src/lib/directives/reset-password.directive.ts","../../projects/webresto/ng-user/src/lib/directives/reset-password-code.directive.ts","../../projects/webresto/ng-user/src/lib/directives/balance.directive.ts","../../projects/webresto/ng-user/src/lib/directives/toggle-dish-to-favorites.directive.ts","../../projects/webresto/ng-user/src/lib/directives/update-profile.directive.ts","../../projects/webresto/ng-user/src/lib/directives/add-address.directive.ts","../../projects/webresto/ng-user/src/lib/directives/delete-address.directive.ts","../../projects/webresto/ng-user/src/lib/ng-user.module.ts","../../projects/webresto/ng-user/src/public-api.ts","../../projects/webresto/ng-user/src/webresto-ng-user.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { NetService } from '@webresto/ng-core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport {\n  Address, SignInRequestData, SignInResponseData, User, UpdateProfileRequestData,\n  UpdateProfileResponseData, AddAddressRequestData, RemoveAddressRequestData, SignUpRequestData,\n  ResetPasswordRequestData, ResetPasswordCodeRequestData,\n  AddDishToFavoritesRequestData, RemoveDishFromFavoritesRequestData\n} from '../../models';\n\nconst LS_TOKEN_NAME = 'gf:tkn:v2';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgRestoUserService {\n\n  private authToken: string = localStorage.getItem(LS_TOKEN_NAME);\n  private rememberMe: boolean = false;\n  private user: BehaviorSubject<User>;\n  private isLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(this.authToken ? true : false);\n  private favorites: BehaviorSubject<any[]>;\n  private addresses: BehaviorSubject<Address[]>;\n  private historyItems: BehaviorSubject<any[]> = new BehaviorSubject([]);\n  private historyTransactions: BehaviorSubject<any[]> = new BehaviorSubject([]);\n  private bonusSystems: BehaviorSubject<any[]>;\n\n  constructor(private net: NetService) {\n    const isLoggedSubscription = this.isLoggedIn.pipe(\n      filter(isLoggedIn => !!isLoggedIn),\n      switchMap(() => this.getFavorites()),\n      switchMap(() => this.getProfile()),\n      switchMap(() => this.getAddresses()),\n      switchMap(() => this.getBonuses()),\n    ).subscribe(() => { }, () => { }, () => isLoggedSubscription.unsubscribe()\n    );\n  }\n\n  signIn(data: SignInRequestData, rememberMe: boolean = false) {\n\n    this.rememberMe = rememberMe;\n\n    return this.net.post('/signin', data).pipe(\n      tap(\n        (result: SignInResponseData) => {\n          this.setAuthToken(result.token);\n          this.user.next(result.user);\n          this.isLoggedIn.next(true);\n        },\n        () => { }\n      )\n    );\n\n  }\n\n  getProfile() {\n    return this.user ? this.user : this.net.get<User>('/user/get/user-info').pipe(\n      switchMap(\n        result => {\n          this.user = new BehaviorSubject(result);\n          return this.user;\n        })\n    );\n  }\n\n  getHistory() {\n    return this.net.get('/user/get/history').pipe(\n      tap(\n        (historyItems) => {\n          this.historyItems.next(historyItems);\n        },\n        error => {\n          if (error?.type === \"Unauthorized\") {\n            this.deleteAuthToken();\n          };\n        })\n    );\n  }\n\n  getHistoryTransactions(bonusSystem: string = \"local\", limit: number = 15, set: number = 0) {\n    return this.net.get(`/bonus/transactions?bonussystem=${bonusSystem}&limit=${limit}&number=${set}`).pipe(\n      tap(\n        (transactions) => {\n          this.historyTransactions.next(transactions);\n        },\n        () => { }\n      )\n    );\n  }\n\n  updateProfile(data: UpdateProfileRequestData) {\n    return this.net.post('/user/set/user-info', {\n      user: data\n    }).pipe(\n      tap(\n        (result: UpdateProfileResponseData) => {\n          this.user.next(result.user);\n        },\n        () => { }\n      )\n    )\n  }\n\n  getAddresses() {\n    return this.addresses ? this.addresses : this.net.get<Address[]>('/user/get/location').pipe(\n      switchMap(\n        addresses => {\n          this.addresses = new BehaviorSubject(addresses);\n          return this.addresses;\n        })\n    );\n  }\n\n  addAddress(address: AddAddressRequestData) {\n    return this.net.post<AddAddressRequestData, Address[]>('/user/add/location', address).pipe(\n      switchMap(\n        addresses => {\n          this.addresses.next(addresses);\n          return this.addresses;\n        })\n    );\n  }\n\n  deleteAddress(address: Address) {\n    return this.net.post<RemoveAddressRequestData, Address[]>('/user/remove/location', {\n      id: address.id,\n      street: address.street,\n      home: address.home\n    }).pipe(\n      tap(\n        (addresses: Address[]) => {\n          this.addresses.next(addresses);\n        },\n        () => { }\n      )\n    );\n  }\n\n  signUp(data: SignUpRequestData) {\n    return this.net.post('/signup', data).pipe(\n      tap(\n        () => {\n          //this.setAuthToken(result.token, false);\n          //this.user.next(result.user);\n        },\n        () => { }\n      )\n    );\n  }\n\n  signOut() {\n    return this.deleteAuthToken();\n  }\n\n\n  getBonuses() {\n    return this.bonusSystems ? this.bonusSystems : this.net.post('/bonus/get', {}).pipe(\n      switchMap(\n        result => {\n          this.bonusSystems = new BehaviorSubject(result);\n          return this.bonusSystems;\n        })\n    );\n  }\n\n  resetPassword(data: ResetPasswordRequestData) {\n    return this.net.post('/reset', data).pipe(\n      tap(\n        () => { },\n        () => { }\n      )\n    );\n  }\n\n  resetPasswordCode(data: ResetPasswordCodeRequestData) {\n    return this.net.post('/code', data).pipe(\n      tap(\n        () => { },\n        () => { }\n      )\n    );\n  }\n\n\n  getFavorites() {\n    return this.favorites ? this.favorites : this.net.get<any[]>('/user/get/favorites').pipe(\n      switchMap(\n        result => {\n          console.info('getFavorites result', result);\n          this.favorites = new BehaviorSubject(result);\n          return this.favorites;\n        })\n    );\n  }\n\n  addDishToFavorites(dish: any) {\n    return this.net.post<AddDishToFavoritesRequestData, any[]>('/user/add/favorites ', {\n      dishId: dish.id\n    }).pipe(\n      map(\n        result => this.favorites.next(result),\n      )\n    );\n  }\n\n  removeDishFromFavorites(dish: any) {\n    return this.net.post<RemoveDishFromFavoritesRequestData, any[]>('/user/remove/favorites ', {\n      dishId: dish.id\n    }).pipe(\n      tap(\n        result => {\n          console.info('Было=>>>', this.favorites.getValue().length);\n          let favoritesUpdated: any[] = this.favorites\n            .getValue()\n            .filter(item => item.id != dish.id);\n          console.info('Стало=>>>', favoritesUpdated.length);\n          this.favorites.next(result);\n        },\n        () => { }\n      )\n    );\n  }\n\n  userProfile(): Observable<User> {\n    return this.user ? this.user : this.getProfile().pipe(\n      switchMap(() => this.getFavorites()),\n      switchMap(() => this.getAddresses()),\n      switchMap(() => this.getBonuses()),\n      switchMap(() => this.user)\n    );\n  }\n\n  userIsLoggedIn(): BehaviorSubject<boolean> {\n    return this.isLoggedIn;\n  }\n\n  userFavorites(): Observable<any[]> {\n    return this.favorites ? this.favorites.asObservable() : of([]);\n  }\n\n  userAddresses(): Observable<Address[]> {\n    return this.addresses ? this.addresses.asObservable() : of([]);\n  }\n\n  userHistory(): Observable<any[]> {\n    return this.historyItems ? this.historyItems.asObservable() : of([]);\n  }\n\n  userTransactionsHistory(): Observable<any[]> {\n    return this.historyTransactions ? this.historyTransactions.asObservable() : of([]);\n  }\n\n  getAuthToken(): string {\n    return this.authToken;\n  }\n\n  setAuthToken(authToken: string): void {\n    if (this.rememberMe) {\n      localStorage.setItem(LS_TOKEN_NAME, authToken);\n    };\n    this.authToken = authToken;\n    this.isLoggedIn.next(true);\n    /*if(updateProfile) {\n      this.getProfile().subscribe();\n      this.getFavorites().subscribe();\n      this.getAddresses().subscribe();\n      this.getHistory().subscribe();\n    }*/\n  }\n\n  deleteAuthToken(): void {\n    this.authToken = null;\n    localStorage.removeItem(LS_TOKEN_NAME);\n    this.isLoggedIn.next(false);\n  }\n\n  saveAvatar(avatar: File) {\n    const data = new FormData();\n    data.append('avatar', avatar, avatar.name);\n    return this.net.post('/user/avatar/upload', data, true, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n    }).pipe(\n      tap(\n        result => this.user.next(result.user),\n        () => { }\n      )\n    );\n  }\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { SignUpRequestData } from '../../models';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\n@Directive({\n  selector: '[rstSignUp]'\n})\nexport class SignUpDirective {\n\n  @Input() name:string;\n  @Input() phone:string;\n  @Input() email:string;\n  @Input() password:string;\n  @Input() captcha:string;\n  @Output() success = new EventEmitter<boolean>();\n  @Output() error = new EventEmitter<string>();\n\n  constructor(\n    private ngRestoUserService: NgRestoUserService\n  ) { }\n\n  @HostListener('click')\n  onClick() {\n    let data:SignUpRequestData = {\n      name: this.name,\n      phone: this.preparePhone(this.phone),\n      email: this.email,\n      password: this.password,\n      captcha: this.captcha\n    };\n    this.ngRestoUserService\n      .signUp(data)\n      .subscribe(\n        () => this.success.emit(true),\n        error => this.error.emit(error)\n      );\n  }\n\n  preparePhone(phone) {\n    phone = '+' + phone.replace(/[^0-9]/gim,'');\n    return phone.replace('+8', '');\n  }\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { SignInRequestData } from '../../models';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\n@Directive({\n  selector: '[rstSignIn]'\n})\nexport class SignInDirective {\n\n  @Input() phone:string;\n  @Input() password:string;\n  @Input() captcha:string;\n  @Input() rememberMe:boolean;\n  @Output() success = new EventEmitter<boolean>();\n  @Output() error = new EventEmitter<string>();\n\n  constructor(\n    private ngRestoUserService: NgRestoUserService\n  ) { }\n\n  @HostListener('click')\n  onClick() {\n    let data:SignInRequestData = {\n      phone: this.preparePhone(this.phone),\n      password: this.password,\n      captcha: this.captcha\n    };\n    this.ngRestoUserService\n      .signIn(data, this.rememberMe)\n      .subscribe(\n        () => this.success.emit(true),\n        error => this.error.emit(error)\n      )\n  }\n\n  preparePhone(phone) {\n    phone = '+' + phone.replace(/[^0-9]/gim,'');\n    return phone.replace('+8', '');\n  }\n\n}\n","import { Directive, HostListener } from '@angular/core';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\n@Directive({\n  selector: '[rstSignOut]'\n})\nexport class SignOutDirective {\n\n  constructor(\n    private ngRestoUserService: NgRestoUserService\n  ) { }\n\n  @HostListener('click')\n  onClick() {\n    this.ngRestoUserService.signOut();\n  }\n\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { ResetPasswordRequestData } from '../../models';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\n@Directive({\n  selector: '[rstResetPassword]'\n})\nexport class ResetPasswordDirective {\n\n  @Input() phone:string;\n  @Input() captcha:string;\n  @Output() success = new EventEmitter<boolean>();\n  @Output() error = new EventEmitter<string>();\n\n  constructor(\n    private ngRestoUserService: NgRestoUserService\n  ) { }\n\n  @HostListener('click')\n  onClick() {\n    let data:ResetPasswordRequestData = {\n      phone: this.phone,\n      captcha: this.captcha\n    };\n    this.ngRestoUserService\n      .resetPassword(data)\n      .subscribe(\n        () => this.success.emit(true),\n        error => this.error.emit(error)\n      );\n  }\n\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { ResetPasswordCodeRequestData } from '../../models';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\n@Directive({\n  selector: '[rstResetPasswordCode]'\n})\nexport class ResetPasswordCodeDirective {\n\n  @Input() userId:string;\n  @Input() code:string;\n  @Input() password:string;\n  @Output() success = new EventEmitter<boolean>();\n  @Output() error = new EventEmitter<string>();\n\n  constructor(\n    private ngRestoUserService: NgRestoUserService\n  ) { }\n\n  @HostListener('click')\n  onClick() {\n    let data:ResetPasswordCodeRequestData = {\n      userId: this.userId,\n      code: this.code,\n      password: this.password\n    };\n    this.ngRestoUserService\n      .resetPasswordCode(data)\n      .subscribe(\n        () => this.success.emit(true),\n        error => this.error.emit(error)\n      );\n  }\n\n}\n","import { Directive, Renderer2, ElementRef } from '@angular/core';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\n@Directive({\n  selector: '[rstBalance]'\n})\nexport class BalanceDirective {\n\n  amount:string;\n\n  constructor(\n    private renderer: Renderer2,\n    private el: ElementRef,\n    private ngRestoUserService: NgRestoUserService\n  ) {\n    let balance = 0;\n    this.ngRestoUserService\n      .getBonuses()\n      .subscribe(bonuses => {\n        for(let name in bonuses) {\n          const data = bonuses[name];\n          if(data.state == 'active') {\n            balance += data.balance;\n          }\n        }\n\n        this.amount = `${balance}`;\n        this.renderer.setProperty(this.el.nativeElement, 'innerHTML', this.amount);\n      });\n\n  }\n\n}\n","import {\n  Directive, HostListener, Input,\n  Output, EventEmitter, ElementRef, Renderer2, OnDestroy, OnChanges\n} from '@angular/core';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\n@Directive({\n  selector: '[rstToggleDishToFavorites]'\n})\nexport class ToggleDishToFavoritesDirective implements OnDestroy, OnChanges {\n\n  @Input() dish: any;\n  @Output() change = new EventEmitter<boolean>();\n  @Output() error = new EventEmitter<string>();\n\n  @Input() isLoggedIn: boolean;\n  @Input() favorites: any[];\n\n  constructor(\n    private ngRestoUserService: NgRestoUserService,\n    private element: ElementRef,\n    private renderer: Renderer2\n  ) { }\n\n  get inFavorites(): boolean {\n    return !!this.favorites.find(dish => dish.id == this.dish.id)\n  };\n\n\n  ngOnDestroy(): void {\n    [this.change, this.error].forEach(emitter => emitter.complete());\n  }\n\n  ngOnChanges() {\n    if (this.inFavorites) {\n      this.renderer.addClass(this.element.nativeElement, 'selected')\n    } else {\n      this.renderer.removeClass(this.element.nativeElement, 'selected');\n    };\n  }\n\n  @HostListener('click')\n  onClick() {\n    if (this.inFavorites) {\n      this.removeDishFromFavorites();\n    } else {\n      this.addDishToFavorites();\n    }\n  }\n\n  addDishToFavorites() {\n    this.ngRestoUserService\n      .addDishToFavorites(this.dish)\n      .subscribe(\n        () => {\n          console.log('toggle dish');\n          this.change.emit(true);\n          this.renderer.addClass(this.element.nativeElement, 'selected');\n        },\n        error => this.error.emit(error)\n      )\n  }\n\n  removeDishFromFavorites() {\n    const req = this.ngRestoUserService.removeDishFromFavorites(this.dish).subscribe(\n      () => {\n        this.change.emit(false);\n        this.renderer.removeClass(this.element.nativeElement, 'selected');\n      },\n      error => this.error.emit(error),\n      () => req.unsubscribe()\n    )\n  }\n\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { UpdateProfileRequestData } from '../../models';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\nimport { formatDate } from '@angular/common';\n\n@Directive({\n  selector: '[rstUpdateProfile]'\n})\nexport class UpdateProfileDirective {\n\n  @Input() name:string;\n  @Input() phone:string;\n  @Input() email:string;\n  @Input() additionalInfo:string;\n  @Input() birthday:string;\n\n  @Output() success = new EventEmitter<boolean>();\n  @Output() error = new EventEmitter<string>();\n\n  constructor(\n    private ngRestoUserService: NgRestoUserService\n  ) { }\n\n  @HostListener('click')\n  onClick() {\n    let data:UpdateProfileRequestData = {\n      name: this.name,\n      //phone: this.phone,\n      email: this.email,\n      additionalInfo:this.additionalInfo,\n      birthday:this.birthday ? formatDate(this.birthday,'yyyy-MM-dd','en') : this.birthday\n    };\n    this.ngRestoUserService\n      .updateProfile(data)\n      .subscribe(\n        () => this.success.emit(true),\n        error => this.error.emit(error)\n      );\n  }\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { AddAddressRequestData } from '../../models';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\n@Directive({\n  selector: '[rstAddAddress]'\n})\nexport class AddAddressDirective {\n\n  @Input() street: string;     //required\n  @Input() streetId: string;     //required\n  @Input() home: string;       //required\n  @Input() name: string;\n  @Input() housing: string;\n  @Input() index: string;\n  @Input() entrance: string;\n  @Input() floor: string;\n  @Input() apartment: string;\n  @Input() doorphone: string;\n\n  @Output() success = new EventEmitter<boolean>();\n  @Output() error = new EventEmitter<string>();\n\n  constructor(\n    private ngRestoUserService: NgRestoUserService\n  ) { }\n\n  @HostListener('click')\n  onClick() {\n    if (!this.street) {\n      this.error.emit('Необходимо указать улицу'); return;\n    }\n    if (!this.streetId) {\n      this.error.emit('Необходимо указать streetId'); return;\n    }\n    if (!this.home) {\n      this.error.emit('Необходимо указать номер дома'); return;\n    }\n\n    let data: AddAddressRequestData = {\n      street: this.street,\n      streetId: this.streetId,\n      home: this.home,\n      name: this.name || '',\n      housing: this.housing || '',\n      index: this.index || '',\n      entrance: this.entrance || '',\n      floor: this.floor || '',\n      apartment: this.apartment || '',\n      doorphone: this.doorphone || ''\n    };\n    const req = this.ngRestoUserService.addAddress(data).subscribe(\n      () => this.success.emit(true),\n      error => this.error.emit(error),\n      () => req.unsubscribe()\n    );\n  }\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { Address } from '../../models';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\n@Directive({\n  selector: '[rstDeleteAddress]'\n})\nexport class DeleteAddressDirective {\n\n  @Input() address:Address;\n\n  @Output() success = new EventEmitter<boolean>();\n  @Output() error = new EventEmitter<string>();\n\n  constructor(\n    private ngRestoUserService: NgRestoUserService\n  ) { }\n\n  @HostListener('click')\n  onClick() {\n    this.ngRestoUserService\n      .deleteAddress(this.address)\n      .subscribe(\n        () => this.success.emit(true),\n        error => this.error.emit(error)\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SignUpDirective } from './directives/sign-up.directive';\nimport { SignInDirective } from './directives/sign-in.directive';\nimport { SignOutDirective } from './directives/sign-out.directive';\nimport { ResetPasswordDirective } from './directives/reset-password.directive';\nimport { ResetPasswordCodeDirective } from './directives/reset-password-code.directive';\nimport { BalanceDirective } from './directives/balance.directive';\nimport { ToggleDishToFavoritesDirective } from './directives/toggle-dish-to-favorites.directive';\nimport { UpdateProfileDirective } from './directives/update-profile.directive';\nimport { AddAddressDirective } from \"./directives/add-address.directive\";\nimport { DeleteAddressDirective } from \"./directives/delete-address.directive\";\n\n@NgModule({\n  imports: [],\n  providers: [],\n  declarations: [\n    SignUpDirective,\n    SignInDirective,\n    SignOutDirective,\n    ResetPasswordDirective,\n    ResetPasswordCodeDirective,\n    BalanceDirective,\n    ToggleDishToFavoritesDirective,\n    UpdateProfileDirective,\n    AddAddressDirective,\n    DeleteAddressDirective\n  ],\n  exports: [\n    SignUpDirective,\n    SignInDirective,\n    SignOutDirective,\n    ResetPasswordDirective,\n    ResetPasswordCodeDirective,\n    BalanceDirective,\n    ToggleDishToFavoritesDirective,\n    UpdateProfileDirective,\n    AddAddressDirective,\n    DeleteAddressDirective\n  ]\n})\nexport class NgUserModule { }\n","/*\n * Public API Surface of ng-user\n */\nexport * from './lib/directives/sign-up.directive';\nexport * from './lib/directives/sign-in.directive';\nexport * from './lib/directives/sign-out.directive';\nexport * from './lib/directives/reset-password.directive';\nexport * from './lib/directives/reset-password-code.directive';\nexport * from './lib/directives/balance.directive';\nexport * from './lib/directives/toggle-dish-to-favorites.directive';\nexport * from './lib/directives/update-profile.directive';\nexport * from './lib/directives/add-address.directive';\nexport * from './lib/directives/delete-address.directive';\nexport * from './lib/services/ng-resto-user.service';\nexport * from './lib/ng-user.module';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}