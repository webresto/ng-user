{"version":3,"file":"webresto-ng-user.js","sources":["../../src/lib/services/ng-resto-user.service.ts","../../src/lib/directives/sign-up.directive.ts","../../src/lib/directives/sign-in.directive.ts","../../src/lib/directives/sign-out.directive.ts","../../src/lib/directives/reset-password.directive.ts","../../src/lib/directives/reset-password-code.directive.ts","../../src/lib/directives/balance.directive.ts","../../src/lib/directives/toggle-dish-to-favorites.directive.ts","../../src/lib/directives/update-profile.directive.ts","../../src/lib/directives/add-address.directive.ts","../../src/lib/directives/delete-address.directive.ts","../../src/lib/ng-user.module.ts","../../src/lib/http-interceptors/auth.interceptor.ts","../../src/lib/http-interceptors/index.ts","../../src/public_api.ts","../../src/webresto-ng-user.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\n\r\nimport {EventerService, EventMessage, NetService} from '@webresto/ng-core';\r\n\r\nimport {SignInRequestData} from '../interfaces/sign-in-request-data';\r\nimport {SignUpRequestData} from '../interfaces/sign-up-request-data';\r\nimport {ResetPasswordRequestData} from '../interfaces/reset-password-request-data';\r\nimport {ResetPasswordCodeRequestData} from '../interfaces/reset-password-code-request-data';\r\nimport {AddDishToFavoritesRequestData} from '../interfaces/add-dish-to-favorites-request-data';\r\nimport {RemoveDishFromFavoritesRequestData} from '../interfaces/remove-dish-from-favorites-request-data';\r\nimport {SignInResponseData} from '../interfaces/sign-in-response-data';\r\nimport {SignUpResponseData} from '../interfaces/sign-up-response-data';\r\nimport {ResetPasswordResponseData} from '../interfaces/reset-password-response-data';\r\nimport {ResetPasswordCodeResponseData} from '../interfaces/reset-password-code-response-data';\r\nimport {UpdateProfileResponseData} from '../interfaces/update-profile-response-data';\r\nimport {UpdateProfileRequestData} from '../interfaces/update-profile-request-data';\r\nimport {Address, User} from '../interfaces';\r\nimport {RemoveAddressRequestData} from \"../interfaces/remove-address-request-data\";\r\nimport {AddAddressRequestData} from \"../interfaces/add-address-request-data\";\r\n\r\nconst LS_TOKEN_NAME = 'gf:tkn:v2';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgRestoUserService {\r\n\r\n  private authToken: string;\r\n  private rememberMe:boolean = false;\r\n  private historyTransactions: BehaviorSubject<any[]>;\r\n  private user:BehaviorSubject<any>;\r\n  private isLoggedIn:BehaviorSubject<boolean>;\r\n  private favorites:BehaviorSubject<any[]>;\r\n  private addresses:BehaviorSubject<Address[]>;\r\n  private streets:BehaviorSubject<any[]>;\r\n  private historyItems:BehaviorSubject<any[]>;\r\n  private bonusSystems: BehaviorSubject<any[]>;\r\n\r\n  constructor(\r\n    //private restoStorageService:RestoStorageService,\r\n    private net:NetService,\r\n    private eventer:EventerService\r\n  ) {\r\n    this.user = new BehaviorSubject({});\r\n    this.isLoggedIn = new BehaviorSubject<boolean>(false);\r\n    this.favorites = new BehaviorSubject([]);\r\n    this.addresses = new BehaviorSubject([]);\r\n    this.historyItems = new BehaviorSubject([]);\r\n    this.historyTransactions = new BehaviorSubject<any[]>([]);\r\n    this.bonusSystems = new BehaviorSubject<any[]>([]);\r\n\r\n    this.authToken = localStorage.getItem(LS_TOKEN_NAME);\r\n    if(this.authToken) {\r\n      this.isLoggedIn.next(true);\r\n    }\r\n\r\n    this.isLoggedIn.subscribe(isLoggedIn => {\r\n      if(isLoggedIn) {\r\n        setTimeout(() => {\r\n          this.getFavorites().subscribe();\r\n          this.getProfile().subscribe();\r\n          this.getAddresses().subscribe();\r\n          this.getBonuses().subscribe();\r\n          this.getHistory().subscribe();\r\n        }, 500);\r\n      }\r\n    });\r\n\r\n    this.eventer\r\n      .getMessageEmitter()\r\n      .subscribe(message => {\r\n        switch(message.type) {\r\n          case \"Unauthorized\":\r\n            this.deleteAuthToken();\r\n            break;\r\n        }\r\n      });\r\n  }\r\n\r\n  signIn(data:SignInRequestData, rememberMe:boolean = false) {\r\n\r\n    this.rememberMe = rememberMe;\r\n\r\n    return this.net.post('/signin', data)\r\n      .pipe(\r\n        tap(\r\n          (result: SignInResponseData) => {\r\n\r\n            this.setAuthToken(result.token, false);\r\n            this.user.next(result.user);\r\n\r\n            this.eventer.emitMessageEvent(\r\n              new EventMessage('success', 'Успех', 'Успешно авторизирован')\r\n            );\r\n          },\r\n\r\n          error => this.eventer.emitMessageEvent(\r\n            new EventMessage('error', 'Ошибка', error)\r\n          )\r\n        )\r\n      );\r\n\r\n  }\r\n\r\n  getProfile() {\r\n    return this.net.get('/user/get/user-info')\r\n      .pipe(\r\n        tap(\r\n          (result: User) => {\r\n            this.user.next(result);\r\n          },\r\n\r\n          error => this.eventer.emitMessageEvent(\r\n            new EventMessage('error', 'Ошибка', error)\r\n          )\r\n        )\r\n      );\r\n  }\r\n\r\n  getHistory() {\r\n    return this.net.get('/user/get/history')\r\n      .pipe(\r\n        tap(\r\n          (historyItems) => {\r\n            this.historyItems.next(historyItems);\r\n          },\r\n\r\n          error => this.eventer.emitMessageEvent(\r\n            new EventMessage('error', 'Ошибка', error)\r\n          )\r\n        )\r\n      );\r\n  }\r\n\r\n  getHistoryTransactions(bonusSystem: string= \"local\", limit: number = 15, set: number = 0) {\r\n     return this.net.get(`/bonus/transactions?bonussystem=${bonusSystem}&limit=${limit}&number=${set}`)\r\n      .pipe(\r\n        tap(\r\n          (transactions) => {\r\n            this.historyTransactions.next(transactions);\r\n          },\r\n\r\n          error => this.eventer.emitMessageEvent(\r\n            new EventMessage('error', 'Ошибка', error)\r\n          )\r\n        )\r\n      );\r\n  }\r\n\r\n  updateProfile(data:UpdateProfileRequestData) {\r\n    return this.net.post('/user/set/user-info', {\r\n      user: data\r\n    })\r\n      .pipe(\r\n        tap(\r\n          (result: UpdateProfileResponseData) => {\r\n            this.user.next(result);\r\n          },\r\n          error => this.eventer.emitMessageEvent(\r\n            new EventMessage('error', 'Ошибка', error)\r\n          )\r\n        )\r\n      )\r\n  }\r\n\r\n  getAddresses() {\r\n    return this.net.get('/user/get/location')\r\n      .pipe(\r\n        tap(\r\n          (addresses: Address[]) => {\r\n            this.addresses.next(addresses);\r\n          },\r\n\r\n          error => this.eventer.emitMessageEvent(\r\n            new EventMessage('error', 'Ошибка', error)\r\n          )\r\n        )\r\n      );\r\n  }\r\n\r\n  addAddress(address: AddAddressRequestData) {\r\n    return this.net.post('/user/add/location', address)\r\n      .pipe(\r\n        tap(\r\n          (addresses: Address[]) => {\r\n            this.addresses.next(addresses);\r\n          },\r\n\r\n          error => this.eventer.emitMessageEvent(\r\n            new EventMessage('error', 'Ошибка', error)\r\n          )\r\n        )\r\n      );\r\n  }\r\n\r\n  deleteAddress(address: Address) {\r\n\r\n    var reqBody: RemoveAddressRequestData = {\r\n      id: address.id,\r\n      street: address.street,\r\n      home: address.home\r\n    };\r\n\r\n    return this.net.post('/user/remove/location', reqBody)\r\n      .pipe(\r\n        tap(\r\n          (addresses: Address[]) => {\r\n            this.addresses.next(addresses);\r\n          },\r\n\r\n          error => this.eventer.emitMessageEvent(\r\n            new EventMessage('error', 'Ошибка', error)\r\n          )\r\n        )\r\n      );\r\n  }\r\n\r\n  signUp(data:SignUpRequestData) {\r\n    return this.net.post('/signup', data)\r\n      .pipe(\r\n        tap(\r\n          (result: SignUpResponseData) => {\r\n\r\n            //this.setAuthToken(result.token, false);\r\n            //this.user.next(result.user);\r\n\r\n            this.eventer.emitMessageEvent(\r\n              new EventMessage('success', 'Регистрация', 'Ваш пароль был отправлен на указанный номер телефона')\r\n            )\r\n          },\r\n\r\n          error => { this.eventer.emitMessageEvent(\r\n            new EventMessage('error', 'Ошибка', error)\r\n          )}\r\n        )\r\n      );\r\n  }\r\n\r\n  signOut() {\r\n    return this.deleteAuthToken();\r\n  }\r\n\r\n\r\n  getBonuses() {\r\n    return this.net.post('/bonus/get', {})\r\n      .pipe(\r\n        tap(\r\n          (result: any) => {\r\n            this.bonusSystems.next(result);\r\n          },\r\n\r\n          error => this.eventer.emitMessageEvent(\r\n            new EventMessage('error', 'Ошибка', error)\r\n          )\r\n        )\r\n      );\r\n  }\r\n\r\n  resetPassword(data:ResetPasswordRequestData) {\r\n\r\n    return this.net.post('/reset', data)\r\n      .pipe(\r\n        tap(\r\n          (result: ResetPasswordResponseData) => {\r\n\r\n          },\r\n\r\n          error => this.eventer.emitMessageEvent(\r\n            new EventMessage('error', 'Ошибка', error)\r\n          )\r\n        )\r\n      );\r\n  }\r\n\r\n  resetPasswordCode(data:ResetPasswordCodeRequestData) {\r\n\r\n    return this.net.post('/code', data)\r\n      .pipe(\r\n        tap(\r\n          (result: ResetPasswordCodeResponseData) => {\r\n\r\n          },\r\n\r\n          error => this.eventer.emitMessageEvent(\r\n            new EventMessage('error', 'Ошибка', error)\r\n          )\r\n        )\r\n      );\r\n  }\r\n\r\n\r\n  getFavorites() {\r\n    return this.net.get('/user/get/favorites ')\r\n      .pipe(\r\n        tap(\r\n          (result: any[]) => {\r\n            console.info('getFavorites result', result);\r\n            this.favorites.next(result);\r\n          },\r\n          error => this.eventer.emitMessageEvent(\r\n            new EventMessage('error', 'Ошибка', error)\r\n          )\r\n        )\r\n      );\r\n  }\r\n\r\n  addDishToFavorites(dish:any) {\r\n    let data:AddDishToFavoritesRequestData = {\r\n      dishId: dish.id\r\n    };\r\n    return this.net.post('/user/add/favorites ', data)\r\n      .pipe(\r\n        tap(\r\n          (result: any) => {\r\n            let favoritesUpdated: any[] = this.favorites.getValue();\r\n            favoritesUpdated.push(dish);\r\n\r\n            this.favorites.next(favoritesUpdated);\r\n          },\r\n          error => this.eventer.emitMessageEvent(\r\n            new EventMessage('error', 'Ошибка', error)\r\n          )\r\n        )\r\n      );\r\n  }\r\n\r\n  removeDishFromFavorites(dish:any) {\r\n    let data:RemoveDishFromFavoritesRequestData = {\r\n      dishId: dish.id\r\n    };\r\n    return this.net.post('/user/remove/favorites ', data)\r\n      .pipe(\r\n        tap(\r\n          (result: any) => {\r\n            console.info('Было=>>>', this.favorites.getValue().length);\r\n            let favoritesUpdated: any[] = this.favorites\r\n              .getValue()\r\n              .filter(item => item.id != dish.id);\r\n            console.info('Стало=>>>', favoritesUpdated.length);\r\n            this.favorites.next(favoritesUpdated);\r\n          },\r\n          error => this.eventer.emitMessageEvent(\r\n            new EventMessage('error', 'Ошибка', error)\r\n          )\r\n        )\r\n      );\r\n  }\r\n\r\n  userProfile():Observable<User> {\r\n    return this.user.pipe();\r\n  }\r\n\r\n  userIsLoggedIn():Observable<boolean> {\r\n    return this.isLoggedIn.pipe();\r\n  }\r\n\r\n  userFavorites():Observable<any[]> {\r\n    return this.favorites.pipe();\r\n  }\r\n\r\n  userAddresses():Observable<Address[]> {\r\n    return this.addresses.pipe();\r\n  }\r\n\r\n  userHistory():Observable<any[]> {\r\n    return this.historyItems.pipe();\r\n  }\r\n  userTransactionsHistory():Observable<any[]> {\r\n    return this.historyTransactions.pipe();\r\n  }\r\n\r\n\r\n  getAuthToken():string {\r\n    return this.authToken;\r\n  }\r\n\r\n  setAuthToken(authToken: string, updateProfile: boolean = true):void {\r\n    if(this.rememberMe) {\r\n      localStorage.setItem(LS_TOKEN_NAME, authToken);\r\n      localStorage.removeItem('gf:login:phone');\r\n    }\r\n    this.authToken = authToken;\r\n    this.isLoggedIn.next(true);\r\n\r\n    /*if(updateProfile) {\r\n      this.getProfile().subscribe();\r\n      this.getFavorites().subscribe();\r\n      this.getAddresses().subscribe();\r\n      this.getHistory().subscribe();\r\n    }*/\r\n  }\r\n\r\n  deleteAuthToken():void {\r\n    this.authToken = undefined;\r\n    localStorage.removeItem(LS_TOKEN_NAME);\r\n    localStorage.removeItem('gf:login:phone');\r\n    this.isLoggedIn.next(false);\r\n  }\r\n\r\n}\r\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\r\n\r\nimport { SignUpRequestData } from '../interfaces/sign-up-request-data';\r\n\r\n@Directive({\r\n  selector: '[appSignUp]'\r\n})\r\nexport class SignUpDirective {\r\n\r\n  @Input() name:string;\r\n  @Input() phone:string;\r\n  @Input() email:string;\r\n  @Input() password:string;\r\n  @Input() captcha:string;\r\n  @Output() success = new EventEmitter<boolean>();\r\n  @Output() error = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private ngRestoUserService: NgRestoUserService\r\n  ) { }\r\n\r\n  @HostListener('click')\r\n  onClick() {\r\n    let data:SignUpRequestData = {\r\n      name: this.name,\r\n      phone: this.preparePhone(this.phone),\r\n      email: this.email,\r\n      password: this.password,\r\n      captcha: this.captcha\r\n    };\r\n    this.ngRestoUserService\r\n      .signUp(data)\r\n      .subscribe(\r\n        () => this.success.emit(true),\r\n        error => this.error.emit(error)\r\n      );\r\n  }\r\n\r\n  preparePhone(phone) {\r\n    phone = '+' + phone.replace(/[^0-9]/gim,'');\r\n    return phone.replace('+8', '');\r\n  }\r\n}\r\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\r\n\r\nimport { SignInRequestData } from '../interfaces/sign-in-request-data';\r\n\r\n@Directive({\r\n  selector: '[appSignIn]'\r\n})\r\nexport class SignInDirective {\r\n\r\n  @Input() phone:string;\r\n  @Input() password:string;\r\n  @Input() captcha:string;\r\n  @Input() rememberMe:boolean;\r\n  @Output() success = new EventEmitter<boolean>();\r\n  @Output() error = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private ngRestoUserService: NgRestoUserService\r\n  ) { }\r\n\r\n  @HostListener('click')\r\n  onClick() {\r\n    let data:SignInRequestData = {\r\n      phone: this.preparePhone(this.phone),\r\n      password: this.password,\r\n      captcha: this.captcha\r\n    };\r\n    this.ngRestoUserService\r\n      .signIn(data, this.rememberMe)\r\n      .subscribe(\r\n        () => this.success.emit(true),\r\n        error => this.error.emit(error)\r\n      )\r\n  }\r\n\r\n  preparePhone(phone) {\r\n    phone = '+' + phone.replace(/[^0-9]/gim,'');\r\n    return phone.replace('+8', '');\r\n  }\r\n\r\n}\r\n","import { Directive, HostListener, Input } from '@angular/core';\r\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\r\n\r\nimport { SignInRequestData } from '../interfaces/sign-in-request-data';\r\n\r\n@Directive({\r\n  selector: '[appSignOut]'\r\n})\r\nexport class SignOutDirective {\r\n\r\n  constructor(\r\n    private ngRestoUserService: NgRestoUserService\r\n  ) { }\r\n\r\n  @HostListener('click')\r\n  onClick() {\r\n    this.ngRestoUserService.signOut();\r\n  }\r\n\r\n}\r\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\r\n\r\nimport { ResetPasswordRequestData } from '../interfaces/reset-password-request-data';\r\n\r\n@Directive({\r\n  selector: '[appResetPassword]'\r\n})\r\nexport class ResetPasswordDirective {\r\n\r\n  @Input() phone:string;\r\n  @Input() captcha:string;\r\n  @Output() success = new EventEmitter<boolean>();\r\n  @Output() error = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private ngRestoUserService: NgRestoUserService\r\n  ) { }\r\n\r\n  @HostListener('click')\r\n  onClick() {\r\n    let data:ResetPasswordRequestData = {\r\n      phone: this.phone,\r\n      captcha: this.captcha\r\n    };\r\n    this.ngRestoUserService\r\n      .resetPassword(data)\r\n      .subscribe(\r\n        () => this.success.emit(true),\r\n        error => this.error.emit(error)\r\n      );\r\n  }\r\n\r\n}\r\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\r\n\r\nimport { ResetPasswordCodeRequestData } from '../interfaces/reset-password-code-request-data';\r\n\r\n\r\n@Directive({\r\n  selector: '[appResetPasswordCode]'\r\n})\r\nexport class ResetPasswordCodeDirective {\r\n\r\n  @Input() userId:string;\r\n  @Input() code:string;\r\n  @Input() password:string;\r\n  @Output() success = new EventEmitter<boolean>();\r\n  @Output() error = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private ngRestoUserService: NgRestoUserService\r\n  ) { }\r\n\r\n  @HostListener('click')\r\n  onClick() {\r\n    let data:ResetPasswordCodeRequestData = {\r\n      userId: this.userId,\r\n      code: this.code,\r\n      password: this.password\r\n    };\r\n    this.ngRestoUserService\r\n      .resetPasswordCode(data)\r\n      .subscribe(\r\n        () => this.success.emit(true),\r\n        error => this.error.emit(error)\r\n      );\r\n  }\r\n\r\n}\r\n","import { Directive, Renderer2, ElementRef } from '@angular/core';\r\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\r\n\r\n@Directive({\r\n  selector: '[appBalance]'\r\n})\r\nexport class BalanceDirective {\r\n\r\n  amount:string;\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private el: ElementRef,\r\n    private ngRestoUserService: NgRestoUserService\r\n  ) {\r\n    let balance = 0;\r\n    this.ngRestoUserService\r\n      .getBonuses()\r\n      .subscribe(bonuses => {\r\n        for(let name in bonuses) {\r\n          const data = bonuses[name];\r\n          if(data.state == 'active') {\r\n            balance += data.balance;\r\n          }\r\n        }\r\n\r\n        this.amount = `${balance}`;\r\n        this.renderer.setProperty(this.el.nativeElement, 'innerHTML', this.amount);\r\n      });\r\n\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive, HostListener, Input,\r\n  Output, EventEmitter, ElementRef, Renderer2\r\n} from '@angular/core';\r\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\r\n\r\nimport { AddDishToFavoritesRequestData } from '../interfaces/add-dish-to-favorites-request-data';\r\nimport { RemoveDishFromFavoritesRequestData } from '../interfaces/remove-dish-from-favorites-request-data';\r\n\r\n@Directive({\r\n  selector: '[appToggleDishToFavorites]'\r\n})\r\nexport class ToggleDishToFavoritesDirective {\r\n\r\n  @Input() dish:any;\r\n  @Output() addedToFavorites = new EventEmitter<void>();\r\n  @Output() removedFromFavorites = new EventEmitter<void>();\r\n  @Output() change = new EventEmitter<boolean>();\r\n  @Output() error = new EventEmitter<string>();\r\n\r\n  inFavorites: boolean;\r\n  isLoggedIn: boolean;\r\n\r\n  constructor(\r\n    private ngRestoUserService: NgRestoUserService,\r\n    private element: ElementRef,\r\n    private renderer: Renderer2\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.ngRestoUserService\r\n      .userFavorites()\r\n      .subscribe(favorites => {\r\n\r\n        this.inFavorites = favorites.find(dish => dish.id == this.dish.id);\r\n\r\n        if(this.inFavorites) {\r\n          this.renderer.addClass(this.element.nativeElement, 'selected')\r\n        } else {\r\n          this.renderer.removeClass(this.element.nativeElement, 'selected');\r\n        }\r\n      });\r\n    this.ngRestoUserService\r\n      .userIsLoggedIn()\r\n      .subscribe(result => this.isLoggedIn = result);\r\n  }\r\n\r\n  @HostListener('click')\r\n  onClick() {\r\n    if(this.inFavorites) {\r\n      this.removeDishFromFavorites();\r\n    } else {\r\n      this.addDishToFavorites();\r\n    }\r\n  }\r\n\r\n  addDishToFavorites() {\r\n    this.ngRestoUserService\r\n      .addDishToFavorites(this.dish)\r\n      .subscribe(\r\n        () => {\r\n          this.addedToFavorites.emit();\r\n          this.change.emit(true);\r\n          this.renderer.addClass(this.element.nativeElement, 'selected');\r\n        },\r\n        error => this.error.emit(error)\r\n      )\r\n  }\r\n\r\n  removeDishFromFavorites() {\r\n    this.ngRestoUserService\r\n      .removeDishFromFavorites(this.dish)\r\n      .subscribe(\r\n        () => {\r\n          this.removedFromFavorites.emit();\r\n          this.change.emit(false);\r\n          this.renderer.removeClass(this.element.nativeElement, 'selected');\r\n        },\r\n        error => this.error.emit(error)\r\n      )\r\n  }\r\n\r\n}\r\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\r\n\r\nimport { UpdateProfileRequestData } from '../interfaces/update-profile-request-data';\r\n\r\n@Directive({\r\n  selector: '[appUpdateProfile]'\r\n})\r\nexport class UpdateProfileDirective {\r\n\r\n  @Input() name:string;\r\n  @Input() phone:string;\r\n  @Input() email:string;\r\n\r\n  @Output() success = new EventEmitter<boolean>();\r\n  @Output() error = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private ngRestoUserService: NgRestoUserService\r\n  ) { }\r\n\r\n  @HostListener('click')\r\n  onClick() {\r\n    let data:UpdateProfileRequestData = {\r\n      name: this.name,\r\n      //phone: this.phone,\r\n      email: this.email\r\n    };\r\n    this.ngRestoUserService\r\n      .updateProfile(data)\r\n      .subscribe(\r\n        () => this.success.emit(true),\r\n        error => this.error.emit(error)\r\n      );\r\n  }\r\n}\r\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\r\n\r\nimport { AddAddressRequestData } from '../interfaces/add-address-request-data';\r\n\r\n@Directive({\r\n  selector: '[appAddAddress]'\r\n})\r\nexport class AddAddressDirective {\r\n\r\n  @Input() street:string;     //required\r\n  @Input() home:string;       //required\r\n  @Input() name:string;\r\n  @Input() housing:string;\r\n  @Input() index:string;\r\n  @Input() entrance:string;\r\n  @Input() floor:string;\r\n  @Input() apartment:string;\r\n  @Input() doorphone:string;\r\n\r\n  @Output() success = new EventEmitter<boolean>();\r\n  @Output() error = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private ngRestoUserService: NgRestoUserService\r\n  ) { }\r\n\r\n  @HostListener('click')\r\n  onClick() {\r\n    if(!this.street) {\r\n      this.error.emit('Необходимо указать улицу'); return;\r\n    }\r\n    if(!this.home) {\r\n      this.error.emit('Необходимо указать номер дома'); return;\r\n    }\r\n\r\n    let data:AddAddressRequestData = {\r\n      street: this.street,\r\n      home: this.home,\r\n      name: this.name || '',\r\n      housing: this.housing || '',\r\n      index: this.index || '',\r\n      entrance: this.entrance || '',\r\n      floor: this.floor || '',\r\n      apartment: this.apartment || '',\r\n      doorphone: this.doorphone || ''\r\n    };\r\n    this.ngRestoUserService\r\n      .addAddress(data)\r\n      .subscribe(\r\n        () => this.success.emit(true),\r\n        error => this.error.emit(error)\r\n      );\r\n  }\r\n}\r\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\r\nimport { Address } from \"../interfaces/address\";\r\n\r\n\r\n\r\n@Directive({\r\n  selector: '[appDeleteAddress]'\r\n})\r\nexport class DeleteAddressDirective {\r\n\r\n  @Input() address:Address;\r\n\r\n  @Output() success = new EventEmitter<boolean>();\r\n  @Output() error = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private ngRestoUserService: NgRestoUserService\r\n  ) { }\r\n\r\n  @HostListener('click')\r\n  onClick() {\r\n    this.ngRestoUserService\r\n      .deleteAddress(this.address)\r\n      .subscribe(\r\n        () => this.success.emit(true),\r\n        error => this.error.emit(error)\r\n      );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { SignUpDirective } from './directives/sign-up.directive';\r\nimport { SignInDirective } from './directives/sign-in.directive';\r\nimport { SignOutDirective } from './directives/sign-out.directive';\r\nimport { ResetPasswordDirective } from './directives/reset-password.directive';\r\nimport { ResetPasswordCodeDirective } from './directives/reset-password-code.directive';\r\nimport { BalanceDirective } from './directives/balance.directive';\r\nimport { ToggleDishToFavoritesDirective } from './directives/toggle-dish-to-favorites.directive';\r\nimport { UpdateProfileDirective } from './directives/update-profile.directive';\r\nimport { AddAddressDirective } from \"./directives/add-address.directive\";\r\nimport { DeleteAddressDirective } from \"./directives/delete-address.directive\";\r\n\r\nconst DIRECTIVES = [\r\n  SignUpDirective,\r\n  SignInDirective,\r\n  SignOutDirective,\r\n  ResetPasswordDirective,\r\n  ResetPasswordCodeDirective,\r\n  BalanceDirective,\r\n  ToggleDishToFavoritesDirective,\r\n  UpdateProfileDirective,\r\n  AddAddressDirective,\r\n  DeleteAddressDirective\r\n];\r\n\r\n@NgModule({\r\n  imports: [],\r\n  providers: [],\r\n  declarations: [...DIRECTIVES],\r\n  exports: [...DIRECTIVES]\r\n})\r\nexport class NgUserModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private userService: NgRestoUserService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n\r\n    console.info('AuthInterceptor', req);\r\n\r\n    // Get the auth token from the service.\r\n    const authToken = this.userService.getAuthToken();\r\n\r\n    if(authToken) {\r\n      // Clone the request and replace the original headers with\r\n      // cloned headers, updated with the authorization.\r\n      const authReq = req.clone({\r\n        headers: req.headers.set('Authorization', `JWT ${authToken}`)\r\n      });\r\n\r\n      // send cloned request with header to the next handler.\r\n      return next.handle(authReq);\r\n\r\n    }\r\n\r\n    return next.handle(req);\r\n  }\r\n}","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AuthInterceptor } from './auth.interceptor';\r\n\r\nexport const ngUserHttpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];","/*\r\n * Public API Surface of ng-user\r\n */\r\n\r\nexport * from './lib/services';\r\nexport * from './lib/ng-user.module';\r\nexport * from './lib/http-interceptors/index';\r\nexport * from './lib/http-interceptors/auth.interceptor';\r\nexport * from './lib/interfaces';\r\nexport * from './lib/directives/sign-up.directive';\r\nexport * from './lib/directives/sign-in.directive';\r\nexport * from './lib/directives/sign-out.directive';\r\nexport * from './lib/directives/reset-password.directive';\r\nexport * from './lib/directives/reset-password-code.directive';\r\nexport * from './lib/directives/balance.directive';\r\nexport * from './lib/directives/toggle-dish-to-favorites.directive';\r\nexport * from './lib/directives/update-profile.directive';\r\nexport * from './lib/directives/add-address.directive';\r\nexport * from './lib/directives/delete-address.directive';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}