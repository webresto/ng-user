{"version":3,"file":"sails-resto-ng-user.js.map","sources":["ng://@sails-resto/ng-user/lib/services/ng-resto-user.service.ts","ng://@sails-resto/ng-user/lib/directives/sign-up.directive.ts","ng://@sails-resto/ng-user/lib/directives/sign-in.directive.ts","ng://@sails-resto/ng-user/lib/directives/sign-out.directive.ts","ng://@sails-resto/ng-user/lib/directives/reset-password.directive.ts","ng://@sails-resto/ng-user/lib/directives/reset-password-code.directive.ts","ng://@sails-resto/ng-user/lib/directives/balance.directive.ts","ng://@sails-resto/ng-user/lib/directives/toggle-dish-to-favorites.directive.ts","ng://@sails-resto/ng-user/lib/directives/update-profile.directive.ts","ng://@sails-resto/ng-user/lib/ng-user.module.ts","ng://@sails-resto/ng-user/lib/http-interceptors/auth.interceptor.ts","ng://@sails-resto/ng-user/lib/http-interceptors/index.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport {\n  NetService,\n  EventerService,\n  EventMessage\n} from '@sails-resto/ng-core';\n\nimport { SignInRequestData } from '../interfaces/sign-in-request-data';\nimport { SignUpRequestData } from '../interfaces/sign-up-request-data';\nimport { ResetPasswordRequestData } from '../interfaces/reset-password-request-data';\nimport { ResetPasswordCodeRequestData } from '../interfaces/reset-password-code-request-data';\nimport { AddDishToFavoritesRequestData } from '../interfaces/add-dish-to-favorites-request-data';\nimport { RemoveDishFromFavoritesRequestData } from '../interfaces/remove-dish-from-favorites-request-data';\nimport { ProfileResponseData } from '../interfaces/profile-response-data';\n\nimport { SignInResponseData } from '../interfaces/sign-in-response-data';\nimport { SignUpResponseData } from '../interfaces/sign-up-response-data';\nimport { ResetPasswordResponseData } from '../interfaces/reset-password-response-data';\nimport { ResetPasswordCodeResponseData } from '../interfaces/reset-password-code-response-data';\nimport { UpdateProfileResponseData } from '../interfaces/update-profile-response-data';\nimport { UpdateProfileRequestData } from '../interfaces/update-profile-request-data';\n\n\nimport { User } from '../interfaces/user';\n\nconst LS_TOKEN_NAME = 'ghtke';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgRestoUserService {\n\n  private authToken:string;\n  private rememberMe:boolean = false;\n  private user:BehaviorSubject<any>;\n  private isLoggedIn:BehaviorSubject<boolean>;\n  private favorites:BehaviorSubject<any[]>;\n\n  constructor(\n    //private restoStorageService:RestoStorageService,\n    private net:NetService,\n    private eventer:EventerService\n  ) {\n    this.user = new BehaviorSubject({});\n    this.isLoggedIn = new BehaviorSubject(false);\n    this.favorites = new BehaviorSubject([]);\n\n    this.authToken = localStorage.getItem(LS_TOKEN_NAME);\n    if(this.authToken) {\n      this.isLoggedIn.next(true);\n    }\n\n    this.isLoggedIn.subscribe(isLoggedIn => {\n      if(isLoggedIn) {\n        setTimeout(() => {\n          this.getFavorites().subscribe();\n          this.getProfile().subscribe();\n        }, 500);\n      }\n    });\n\n    this.eventer\n      .getMessageEmitter()\n      .subscribe(message => {\n        switch(message.type) {\n          case \"Unauthorized\":\n            this.deleteAuthToken();\n            break;\n        }\n      });\n  }\n\n  signIn(data:SignInRequestData, rememberMe:boolean = false) {\n\n    this.rememberMe = rememberMe;\n\n    return this.net.post('/signin', data)\n      .pipe(\n        tap(\n          (result: SignInResponseData) => {\n\n            this.setAuthToken(result.token, false);\n            this.user.next(result.user);\n\n            this.eventer.emitMessageEvent(\n              new EventMessage('success', 'Ð£ÑÐ¿ÐµÑ', 'Ð£ÑÐ¿ÐµÑÐ½Ð¾ Ð°Ð²ÑÐ¾ÑÐ¸Ð·Ð¸ÑÐ¾Ð²Ð°Ð½')\n            );\n          },\n\n          error => this.eventer.emitMessageEvent(\n            new EventMessage('error', 'ÐÑÐ¸Ð±ÐºÐ°', error)\n          )\n        )\n      );\n\n  }\n\n  getProfile() {\n    return this.net.get('/user/get/user-info')\n      .pipe(\n        tap(\n          (result: User) => {\n            this.user.next(result);\n          },\n\n          error => this.eventer.emitMessageEvent(\n            new EventMessage('error', 'ÐÑÐ¸Ð±ÐºÐ°', error)\n          )\n        )\n      );\n  }\n\n  updateProfile(data:UpdateProfileRequestData) {\n    return this.net.post('/user/set/user-info', data)\n      .pipe(\n        tap(\n          (result: UpdateProfileResponseData) => {\n            this.user.next(result);\n          },\n          error => this.eventer.emitMessageEvent(\n            new EventMessage('error', 'ÐÑÐ¸Ð±ÐºÐ°', error)\n          )\n        )\n      )\n  }\n\n  signUp(data:SignUpRequestData) {\n    return this.net.post('/signup', data)\n      .pipe(\n        tap(\n          (result: SignUpResponseData) => {\n\n            this.setAuthToken(result.token, false);\n            this.user.next(result.user);\n\n            this.eventer.emitMessageEvent(\n              new EventMessage('success', 'Ð£ÑÐ¿ÐµÑ', 'Ð£ÑÐ¿ÐµÑÐ½Ð¾ Ð·Ð°ÑÐµÐ³Ð¸ÑÑÐ¸ÑÐ¾Ð²Ð°Ð½')\n            )\n          },\n\n          error => this.eventer.emitMessageEvent(\n            new EventMessage('error', 'ÐÑÐ¸Ð±ÐºÐ°', error)\n          )\n        )\n      );\n  }\n\n  signOut() {\n    return this.deleteAuthToken();\n  }\n\n  resetPassword(data:ResetPasswordRequestData) {\n\n    return this.net.post('/login', data)\n      .pipe(\n        tap(\n          (result: ResetPasswordResponseData) => {\n\n          },\n\n          error => this.eventer.emitMessageEvent(\n            new EventMessage('error', 'ÐÑÐ¸Ð±ÐºÐ°', error)\n          )\n        )\n      );\n  }\n\n  resetPasswordCode(data:ResetPasswordCodeRequestData) {\n\n    return this.net.post('/code', data)\n      .pipe(\n        tap(\n          (result: ResetPasswordCodeResponseData) => {\n\n          },\n\n          error => this.eventer.emitMessageEvent(\n            new EventMessage('error', 'ÐÑÐ¸Ð±ÐºÐ°', error)\n          )\n        )\n      );\n  }\n\n\n  getFavorites() {\n    return this.net.get('/user/get/favorites ')\n      .pipe(\n        tap(\n          (result: any[]) => {\n            console.info('getFavorites result', result);\n            this.favorites.next(result);\n          },\n          error => this.eventer.emitMessageEvent(\n            new EventMessage('error', 'ÐÑÐ¸Ð±ÐºÐ°', error)\n          )\n        )\n      );\n  }\n\n  addDishToFavorites(dish:any) {\n    let data:AddDishToFavoritesRequestData = {\n      dishId: dish.id\n    };\n    return this.net.post('/user/add/favorites ', data)\n      .pipe(\n        tap(\n          (result: any) => {\n            let favoritesUpdated: any[] = this.favorites.getValue();\n            favoritesUpdated.push(dish);\n\n            this.favorites.next(favoritesUpdated);\n          },\n          error => this.eventer.emitMessageEvent(\n            new EventMessage('error', 'ÐÑÐ¸Ð±ÐºÐ°', error)\n          )\n        )\n      );\n  }\n\n  removeDishFromFavorites(dish:any) {\n    let data:RemoveDishFromFavoritesRequestData = {\n      dishId: dish.id\n    };\n    return this.net.post('/user/remove/favorites ', data)\n      .pipe(\n        tap(\n          (result: any) => {\n            console.info('ÐÑÐ»Ð¾=>>>', this.favorites.getValue().length);\n            let favoritesUpdated: any[] = this.favorites\n              .getValue()\n              .filter(item => item.id != dish.id);\n            console.info('Ð¡ÑÐ°Ð»Ð¾=>>>', favoritesUpdated.length);\n            this.favorites.next(favoritesUpdated);\n          },\n          error => this.eventer.emitMessageEvent(\n            new EventMessage('error', 'ÐÑÐ¸Ð±ÐºÐ°', error)\n          )\n        )\n      );\n  }\n\n  userProfile():BehaviorSubject<User> {\n    return this.user;\n  }\n\n  userIsLoggedIn():BehaviorSubject<boolean> {\n    return this.isLoggedIn;\n  }\n\n  userFavorites():BehaviorSubject<any[]> {\n    return this.favorites;\n  }\n\n\n\n  getAuthToken():string {\n    return this.authToken;\n  }\n\n  setAuthToken(authToken: string, updateProfile: boolean = true):void {\n    if(this.rememberMe) {\n      localStorage.setItem(LS_TOKEN_NAME, authToken);\n    }\n    this.authToken = authToken;\n    this.isLoggedIn.next(true);\n    this.getFavorites().subscribe();\n\n    if(updateProfile) {\n      this.getProfile().subscribe();\n    }\n  }\n\n  deleteAuthToken():void {\n    this.authToken = undefined;\n    localStorage.removeItem(LS_TOKEN_NAME);\n    this.isLoggedIn.next(false);\n  }\n\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\nimport { SignUpRequestData } from '../interfaces/sign-up-request-data';\n\n@Directive({\n  selector: '[appSignUp]'\n})\nexport class SignUpDirective {\n\n  @Input() name:string;\n  @Input() phone:string;\n  @Input() email:string;\n  @Input() password:string;\n  @Input() captcha:string;\n  @Output() success = new EventEmitter<boolean>();\n  @Output() error = new EventEmitter<string>();\n\n  constructor(\n    private ngRestoUserService: NgRestoUserService\n  ) { }\n\n  @HostListener('click')\n  onClick() {\n    let data:SignUpRequestData = {\n      name: this.name,\n      phone: this.phone,\n      email: this.email,\n      password: this.password,\n      captcha: this.captcha\n    };\n    this.ngRestoUserService\n      .signUp(data)\n      .subscribe(\n        () => this.success.emit(true),\n        error => this.error.emit(error)\n      );\n  }\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\nimport { SignInRequestData } from '../interfaces/sign-in-request-data';\n\n@Directive({\n  selector: '[appSignIn]'\n})\nexport class SignInDirective {\n\n  @Input() phone:string;\n  @Input() password:string;\n  @Input() captcha:string;\n  @Input() rememberMe:boolean;\n  @Output() success = new EventEmitter<boolean>();\n  @Output() error = new EventEmitter<string>();\n\n  constructor(\n    private ngRestoUserService: NgRestoUserService\n  ) { }\n\n  @HostListener('click')\n  onClick() {\n    let data:SignInRequestData = {\n      phone: this.phone,\n      password: this.password,\n      captcha: this.captcha\n    };\n    this.ngRestoUserService\n      .signIn(data, this.rememberMe)\n      .subscribe(\n        () => this.success.emit(true),\n        error => this.error.emit(error)\n      )\n  }\n\n}\n","import { Directive, HostListener, Input } from '@angular/core';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\nimport { SignInRequestData } from '../interfaces/sign-in-request-data';\n\n@Directive({\n  selector: '[appSignOut]'\n})\nexport class SignOutDirective {\n\n  constructor(\n    private ngRestoUserService: NgRestoUserService\n  ) { }\n\n  @HostListener('click')\n  onClick() {\n    this.ngRestoUserService.signOut();\n  }\n\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\nimport { ResetPasswordRequestData } from '../interfaces/reset-password-request-data';\n\n@Directive({\n  selector: '[appResetPassword]'\n})\nexport class ResetPasswordDirective {\n\n  @Input() phone:string;\n  @Input() password:string;\n  @Input() captcha:string;\n  @Output() success = new EventEmitter<boolean>();\n  @Output() error = new EventEmitter<string>();\n\n  constructor(\n    private ngRestoUserService: NgRestoUserService\n  ) { }\n\n  @HostListener('click')\n  onClick() {\n    let data:ResetPasswordRequestData = {\n      phone: this.phone,\n      password: this.password,\n      captcha: this.captcha\n    };\n    this.ngRestoUserService\n      .resetPassword(data)\n      .subscribe(\n        () => this.success.emit(true),\n        error => this.error.emit(error)\n      );\n  }\n\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\nimport { ResetPasswordCodeRequestData } from '../interfaces/reset-password-code-request-data';\n\n\n@Directive({\n  selector: '[appResetPasswordCode]'\n})\nexport class ResetPasswordCodeDirective {\n\n  @Input() userId:string;\n  @Input() code:string;\n  @Input() password:string;\n  @Output() success = new EventEmitter<boolean>();\n  @Output() error = new EventEmitter<string>();\n\n  constructor(\n    private ngRestoUserService: NgRestoUserService\n  ) { }\n\n  @HostListener('click')\n  onClick() {\n    let data:ResetPasswordCodeRequestData = {\n      userId: this.userId,\n      code: this.code,\n      password: this.password\n    };\n    this.ngRestoUserService\n      .resetPasswordCode(data)\n      .subscribe(\n        () => this.success.emit(true),\n        error => this.error.emit(error)\n      );\n  }\n\n}\n","import { Directive, Renderer2, ElementRef } from '@angular/core';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\n@Directive({\n  selector: '[appBalance]'\n})\nexport class BalanceDirective {\n\n  amount:string;\n\n  constructor(\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {\n    this.amount = '0';\n    this.renderer.setProperty(this.el.nativeElement, 'innerHTML', this.amount);\n  }\n\n}\n","import {\n  Directive, HostListener, Input,\n  Output, EventEmitter, ElementRef, Renderer2\n} from '@angular/core';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\nimport { AddDishToFavoritesRequestData } from '../interfaces/add-dish-to-favorites-request-data';\nimport { RemoveDishFromFavoritesRequestData } from '../interfaces/remove-dish-from-favorites-request-data';\n\n@Directive({\n  selector: '[appToggleDishToFavorites]'\n})\nexport class ToggleDishToFavoritesDirective {\n\n  @Input() dish:any;\n  @Output() addedToFavorites = new EventEmitter<void>();\n  @Output() removedFromFavorites = new EventEmitter<void>();\n  @Output() change = new EventEmitter<boolean>();\n  @Output() error = new EventEmitter<string>();\n\n  inFavorites: boolean;\n  isLoggedIn: boolean;\n\n  constructor(\n    private ngRestoUserService: NgRestoUserService,\n    private element: ElementRef,\n    private renderer: Renderer2\n  ) {}\n\n  ngOnInit() {\n    this.ngRestoUserService\n      .userFavorites()\n      .subscribe(favorites => {\n\n        this.inFavorites = favorites.find(dish => dish.id == this.dish.id);\n\n        if(this.inFavorites) {\n          this.renderer.addClass(this.element.nativeElement, 'selected')\n        } else {\n          this.renderer.removeClass(this.element.nativeElement, 'selected');\n        }\n      });\n    this.ngRestoUserService\n      .userIsLoggedIn()\n      .subscribe(result => this.isLoggedIn = result);\n  }\n\n  @HostListener('click')\n  onClick() {\n    if(this.inFavorites) {\n      this.removeDishFromFavorites();\n    } else {\n      this.addDishToFavorites();\n    }\n  }\n\n  addDishToFavorites() {\n    this.ngRestoUserService\n      .addDishToFavorites(this.dish)\n      .subscribe(\n        () => {\n          this.addedToFavorites.emit();\n          this.change.emit(true);\n          this.renderer.addClass(this.element.nativeElement, 'selected');\n        },\n        error => this.error.emit(error)\n      )\n  }\n\n  removeDishFromFavorites() {\n    this.ngRestoUserService\n      .removeDishFromFavorites(this.dish)\n      .subscribe(\n        () => {\n          this.removedFromFavorites.emit();\n          this.change.emit(false);\n          this.renderer.removeClass(this.element.nativeElement, 'selected');\n        },\n        error => this.error.emit(error)\n      )\n  }\n\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\nimport { UpdateProfileRequestData } from '../interfaces/update-profile-request-data';\n\n@Directive({\n  selector: '[appUpdateProfile]'\n})\nexport class UpdateProfileDirective {\n\n  @Input() name:string;\n  @Input() phone:string;\n  @Input() email:string;\n\n  @Output() success = new EventEmitter<boolean>();\n  @Output() error = new EventEmitter<string>();\n\n  constructor(\n    private ngRestoUserService: NgRestoUserService\n  ) { }\n\n  @HostListener('click')\n  onClick() {\n    let data:UpdateProfileRequestData = {\n      name: this.name,\n      phone: this.phone,\n      email: this.email\n    };\n    this.ngRestoUserService\n      .updateProfile(data)\n      .subscribe(\n        () => this.success.emit(true),\n        error => this.error.emit(error)\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { SignUpDirective } from './directives/sign-up.directive';\nimport { SignInDirective } from './directives/sign-in.directive';\nimport { SignOutDirective } from './directives/sign-out.directive';\nimport { ResetPasswordDirective } from './directives/reset-password.directive';\nimport { ResetPasswordCodeDirective } from './directives/reset-password-code.directive';\nimport { BalanceDirective } from './directives/balance.directive';\nimport { ToggleDishToFavoritesDirective } from './directives/toggle-dish-to-favorites.directive';\nimport { UpdateProfileDirective } from './directives/update-profile.directive';\n\nconst DIRECTIVES = [\n  SignUpDirective,\n  SignInDirective,\n  SignOutDirective,\n  ResetPasswordDirective,\n  ResetPasswordCodeDirective,\n  BalanceDirective,\n  ToggleDishToFavoritesDirective,\n  UpdateProfileDirective\n];\n\n@NgModule({\n  imports: [],\n  providers: [],\n  declarations: [...DIRECTIVES],\n  exports: [...DIRECTIVES]\n})\nexport class NgUserModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpErrorResponse\n} from '@angular/common/http';\n\nimport { NgRestoUserService } from '../services/ng-resto-user.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private userService: NgRestoUserService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n\n    console.info('AuthInterceptor', req);\n\n    // Get the auth token from the service.\n    const authToken = this.userService.getAuthToken();\n\n    if(authToken) {\n      // Clone the request and replace the original headers with\n      // cloned headers, updated with the authorization.\n      const authReq = req.clone({\n        headers: req.headers.set('Authorization', `JWT ${authToken}`)\n      });\n\n      // send cloned request with header to the next handler.\n      return next.handle(authReq);\n\n    }\n\n    return next.handle(req);\n  }\n}","import { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AuthInterceptor } from './auth.interceptor';\n\nexport const ngUserHttpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n];"],"names":[],"mappings":"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"}
